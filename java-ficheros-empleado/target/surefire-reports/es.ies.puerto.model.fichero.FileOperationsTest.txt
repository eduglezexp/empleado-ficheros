-------------------------------------------------------------------------------
Test set: es.ies.puerto.model.fichero.FileOperationsTest
-------------------------------------------------------------------------------
Tests run: 11, Failures: 4, Errors: 0, Skipped: 0, Time elapsed: 0.038 s <<< FAILURE! -- in es.ies.puerto.model.fichero.FileOperationsTest
es.ies.puerto.model.fichero.FileOperationsTest.testEmpleadosPorEdad -- Time elapsed: 0.009 s <<< FAILURE!
org.opentest4j.AssertionFailedError: El empleado Carlos debería estar en el rango de edades. ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:210)
	at es.ies.puerto.model.fichero.FileOperationsTest.testEmpleadosPorEdad(FileOperationsTest.java:100)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

es.ies.puerto.model.fichero.FileOperationsTest.testEmpleadosPorEdadNoExistente -- Time elapsed: 0.002 s <<< FAILURE!
org.opentest4j.AssertionFailedError: No deberían existir empleados en el rango de edades. ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:210)
	at es.ies.puerto.model.fichero.FileOperationsTest.testEmpleadosPorEdadNoExistente(FileOperationsTest.java:107)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

es.ies.puerto.model.fichero.FileOperationsTest.testUpdateEmpleadoNoExistente -- Time elapsed: 0.002 s <<< FAILURE!
org.opentest4j.AssertionFailedError: No debería permitir actualizar un empleado que no existe. ==> expected: <false> but was: <true>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertFalse.failNotFalse(AssertFalse.java:63)
	at org.junit.jupiter.api.AssertFalse.assertFalse(AssertFalse.java:36)
	at org.junit.jupiter.api.Assertions.assertFalse(Assertions.java:235)
	at es.ies.puerto.model.fichero.FileOperationsTest.testUpdateEmpleadoNoExistente(FileOperationsTest.java:62)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

es.ies.puerto.model.fichero.FileOperationsTest.testEmpleadosPorPuesto -- Time elapsed: 0.002 s <<< FAILURE!
org.opentest4j.AssertionFailedError: Debería haber un solo empleado con el puesto 'Manager'. ==> expected: <1> but was: <2>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertEquals.failNotEqual(AssertEquals.java:197)
	at org.junit.jupiter.api.AssertEquals.assertEquals(AssertEquals.java:150)
	at org.junit.jupiter.api.Assertions.assertEquals(Assertions.java:559)
	at es.ies.puerto.model.fichero.FileOperationsTest.testEmpleadosPorPuesto(FileOperationsTest.java:85)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)

